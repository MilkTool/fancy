!RBIX
8876994460201244843
x
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
5
x
3
Set
x
10
open_class
x
14
__class_init__
M
1
n
n
x
3
Set
i
219
5
66
7
0
64
15
5
45
1
2
47
49
3
1
15
5
7
4
35
1
47
49
5
1
15
5
49
6
0
15
99
7
7
7
8
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
11
7
12
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
13
7
14
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
15
7
16
65
45
17
18
49
19
4
15
5
49
6
0
15
99
7
20
7
21
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
22
7
23
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
24
7
25
65
67
49
9
0
49
10
4
15
5
49
6
0
15
5
47
49
26
0
99
7
27
7
28
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
29
7
30
65
67
49
9
0
49
10
4
15
5
49
6
0
15
99
7
31
7
32
65
67
49
9
0
49
10
4
11
I
6
I
0
I
0
I
0
n
p
33
s
34
A simple Set data structure class.
x
15
FancyEnumerable
n
x
8
include:
x
6
values
x
11
read_slots:
x
6
public
x
11
initialize:
M
1
n
n
x
11
initialize:
i
12
7
0
64
15
20
0
49
1
0
38
2
11
I
2
I
1
I
1
I
1
n
p
3
s
50
Initialize a new Set with a given Array of values.
x
5
:uniq
x
7
@values
p
9
I
0
I
a
I
0
I
9
I
0
I
8
I
4
I
9
I
c
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
1
x
3
arr
x
17
method_visibility
x
15
add_defn_method
x
11
:initialize
M
1
n
n
x
11
:initialize
i
9
7
0
64
15
35
0
38
1
11
I
1
I
0
I
0
I
0
n
p
2
s
27
Initialize a new empty Set.
x
7
@values
p
9
I
0
I
f
I
0
I
e
I
0
I
d
I
4
I
e
I
9
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
x
3
:==
M
1
n
n
x
3
:==
i
18
7
0
64
15
20
0
45
1
2
49
3
1
56
4
49
5
1
11
I
3
I
1
I
1
I
1
n
p
6
s
33
Indicates, if two Sets are equal.
x
3
Set
n
x
6
is_a?:
M
1
p
2
x
9
for_block
t
n
x
3
:==
i
12
39
0
21
1
0
49
1
0
49
2
1
11
I
3
I
0
I
0
I
0
n
p
3
x
7
@values
x
7
:values
x
3
:==
p
5
I
0
I
15
I
0
I
14
I
c
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
x
8
if_true:
p
13
I
0
I
16
I
0
I
13
I
0
I
12
I
4
I
13
I
c
I
15
I
e
I
16
I
12
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
1
x
5
other
x
3
:[]
M
1
n
n
x
3
:[]
i
9
45
0
1
20
0
49
2
1
11
I
3
I
1
I
1
I
1
n
p
3
x
3
Set
n
x
4
new:
p
7
I
0
I
1b
I
0
I
1a
I
5
I
1b
I
9
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
1
x
3
arr
x
3
Set
n
x
13
attach_method
x
3
:<<
M
1
n
n
x
3
:<<
i
17
7
0
64
15
56
1
5
20
0
47
49
2
1
49
3
1
11
I
4
I
1
I
1
I
1
n
p
4
s
28
Insert a value into the Set.
M
1
p
2
x
9
for_block
t
n
x
3
:<<
i
9
39
0
21
1
0
49
1
1
11
I
3
I
0
I
0
I
0
n
p
2
x
7
@values
x
3
:<<
p
3
I
0
I
1f
I
9
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
x
10
includes?:
x
7
unless:
p
11
I
0
I
20
I
0
I
1f
I
0
I
1e
I
4
I
1f
I
d
I
20
I
11
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
1
x
5
value
x
10
includes?:
M
1
n
n
x
10
includes?:
i
12
7
0
64
15
39
1
20
0
49
2
1
11
I
3
I
1
I
1
I
1
n
p
3
s
45
Indicates, if the Set includes a given value.
x
7
@values
x
10
includes?:
p
11
I
0
I
25
I
0
I
24
I
0
I
23
I
4
I
24
I
8
I
25
I
c
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
1
x
5
value
x
5
each:
M
1
n
n
x
5
each:
i
12
7
0
64
15
39
1
20
0
49
2
1
11
I
3
I
1
I
1
I
1
n
p
3
s
48
Calls a given Block for each element of the Set.
x
7
@values
x
5
each:
p
11
I
0
I
2a
I
0
I
29
I
0
I
28
I
4
I
29
I
8
I
2a
I
c
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
1
x
5
block
x
30
:define_forward_method_missing
x
28
unknown_message:with_params:
M
1
n
n
x
28
unknown_message:with_params:
i
13
20
1
49
0
0
56
1
56
2
49
3
2
11
I
5
I
2
I
2
I
2
n
p
4
x
7
:empty?
M
1
p
2
x
9
for_block
t
n
x
28
unknown_message:with_params:
i
9
39
0
21
1
0
49
1
1
11
I
3
I
0
I
0
I
0
n
p
2
x
7
@values
x
5
send:
p
7
I
0
I
2f
I
0
I
2e
I
5
I
2f
I
9
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
28
unknown_message:with_params:
i
12
39
0
21
1
0
21
1
1
49
1
2
11
I
4
I
0
I
0
I
0
n
p
2
x
7
@values
x
12
send:params:
p
7
I
0
I
31
I
0
I
30
I
8
I
31
I
c
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
x
13
if_true:else:
p
11
I
0
I
32
I
0
I
2d
I
5
I
2f
I
7
I
31
I
9
I
32
I
d
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
2
x
3
msg
x
6
params
x
5
:to_s
M
1
n
n
x
5
:to_s
i
16
7
0
64
15
7
1
64
39
2
49
3
1
49
4
0
11
I
2
I
0
I
0
I
0
n
p
5
s
41
Returns a String representation of a Set.
s
3
Set
x
7
@values
x
3
:++
x
5
:to_s
p
9
I
0
I
37
I
0
I
36
I
0
I
35
I
4
I
36
I
10
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
x
8
:inspect
M
1
n
n
x
8
:inspect
i
16
7
0
64
15
5
47
49
1
0
7
2
64
49
3
1
11
I
2
I
0
I
0
I
0
n
p
4
s
50
Returns a detailed String representation of a Set.
x
5
:to_s
s
6
 : Set
x
3
:++
p
9
I
0
I
3c
I
0
I
3b
I
0
I
3a
I
4
I
3b
I
10
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
p
37
I
2
I
2
I
6
I
5
I
7
I
4
I
a
I
5
I
f
I
6
I
10
I
5
I
14
I
6
I
19
I
a
I
31
I
f
I
44
I
16
I
57
I
1b
I
5d
I
18
I
69
I
20
I
77
I
25
I
8a
I
2a
I
9d
I
32
I
ba
I
37
I
cd
I
3c
I
db
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
x
13
attach_method
p
5
I
0
I
3e
I
0
I
3d
I
1d
x
34
/more/vic/hk/fancy-lang/lib/set.fy
p
0
