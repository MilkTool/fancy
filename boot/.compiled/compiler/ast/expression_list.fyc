!RBIX
8876994460201244843
x
M
1
n
n
x
10
__script__
i
31
99
7
0
1
45
1
2
49
3
3
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
15
2
11
I
6
I
0
I
0
I
0
n
p
7
x
3
AST
x
5
Fancy
n
x
16
open_class_under
x
14
__class_init__
M
1
n
n
x
3
AST
i
31
5
66
99
7
0
45
1
2
65
49
3
3
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
11
I
6
I
0
I
0
I
0
n
p
7
x
14
ExpressionList
x
4
Node
n
x
10
open_class
x
14
__class_init__
M
1
n
n
x
14
ExpressionList
i
172
5
66
5
7
0
35
1
47
49
1
1
15
5
49
2
0
15
99
7
3
7
4
65
67
49
5
0
49
6
4
15
5
49
2
0
15
5
7
7
64
47
49
8
1
99
7
9
7
10
65
67
49
5
0
49
6
4
15
5
49
2
0
15
99
7
11
7
12
65
67
49
5
0
49
6
4
15
5
49
2
0
15
99
7
13
7
14
65
67
49
5
0
49
6
4
15
5
49
2
0
15
99
7
15
7
16
65
67
49
5
0
49
6
4
15
5
49
2
0
15
99
7
17
7
18
65
67
49
5
0
49
6
4
15
5
49
2
0
15
99
7
19
7
20
65
67
49
5
0
49
6
4
15
5
49
2
0
15
99
7
21
7
22
65
67
49
5
0
49
6
4
11
I
6
I
0
I
0
I
0
n
p
23
x
11
expressions
x
11
read_slots:
x
6
public
x
11
initialize:
M
1
n
n
x
11
initialize:
i
19
20
0
38
0
15
7
1
64
15
5
39
0
35
0
47
49
2
2
11
I
4
I
1
I
1
I
1
n
p
3
x
5
@line
s
35
Forward to message initialize:list:
x
16
initialize:list:
p
3
I
0
I
5
I
13
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
1
x
5
@line
x
17
method_visibility
x
15
add_defn_method
s
5
list:
x
32
define_constructor_class_method:
x
16
initialize:list:
M
1
n
n
x
16
initialize:list:
i
10
20
0
38
0
15
20
1
38
1
11
I
3
I
2
I
2
I
2
n
p
2
x
5
@line
x
12
@expressions
p
3
I
0
I
5
I
a
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
2
x
5
@line
x
12
@expressions
x
19
unshift_expression:
M
1
n
n
x
19
unshift_expression:
i
8
39
0
20
0
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
x
12
@expressions
x
7
unshift
p
7
I
0
I
9
I
0
I
8
I
4
I
9
I
8
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
1
x
10
expression
x
15
add_expression:
M
1
n
n
x
15
add_expression:
i
8
39
0
20
0
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
x
12
@expressions
x
3
:<<
p
5
I
0
I
d
I
0
I
c
I
8
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
1
x
10
expression
x
7
:empty?
M
1
n
n
x
7
:empty?
i
6
39
0
49
1
0
11
I
1
I
0
I
0
I
0
n
p
2
x
12
@expressions
x
7
:empty?
p
5
I
0
I
11
I
0
I
10
I
6
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
x
9
bytecode:
M
1
n
n
x
9
bytecode:
i
24
5
20
0
47
49
0
1
15
39
1
49
2
0
19
1
15
39
1
56
3
49
4
1
11
I
4
I
2
I
1
I
1
n
p
5
x
3
pos
x
12
@expressions
x
5
:size
M
1
p
2
x
9
for_block
t
n
x
9
bytecode:
i
37
57
19
0
15
21
1
1
79
49
0
1
22
1
1
15
20
0
21
1
0
49
1
1
15
56
2
21
1
1
78
49
3
1
49
4
1
11
I
5
I
1
I
1
I
1
n
p
5
x
2
:-
x
9
bytecode:
M
1
p
2
x
9
for_block
t
n
x
9
bytecode:
i
7
21
2
0
49
0
0
11
I
2
I
0
I
0
I
0
n
p
1
x
3
pop
p
3
I
0
I
19
I
7
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
x
2
:>
x
3
if:
p
11
I
0
I
1a
I
4
I
17
I
f
I
18
I
14
I
19
I
21
I
1a
I
25
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
1
x
4
expr
x
5
each:
p
15
I
0
I
1b
I
0
I
15
I
1
I
14
I
3
I
15
I
10
I
16
I
12
I
1a
I
14
I
1b
I
18
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
2
x
1
g
x
4
size
x
16
:strip_arguments
M
1
n
n
x
16
:strip_arguments
i
3
35
0
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
0
I
21
I
0
I
20
I
3
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
x
16
:shift_docstring
M
1
n
n
x
16
:shift_docstring
i
33
39
0
49
1
0
45
2
3
43
4
43
5
49
6
1
39
0
49
7
0
79
49
8
1
49
9
1
56
10
49
11
1
11
I
3
I
0
I
0
I
0
n
p
12
x
12
@expressions
x
6
:first
x
8
Rubinius
n
x
3
AST
x
13
StringLiteral
x
8
kind_of?
x
5
:size
x
2
:>
x
3
:&&
M
1
p
2
x
9
for_block
t
n
x
16
:shift_docstring
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
n
p
2
x
12
@expressions
x
5
shift
p
7
I
0
I
2a
I
0
I
29
I
2
I
2a
I
6
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
x
8
if_true:
p
11
I
0
I
2b
I
0
I
27
I
f
I
28
I
1b
I
2a
I
1d
I
2b
I
21
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
p
19
I
2
I
5
I
3
I
4
I
7
I
5
I
3a
I
9
I
4d
I
d
I
65
I
11
I
73
I
1b
I
8b
I
21
I
9e
I
2b
I
ac
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
x
13
attach_method
p
7
I
2
I
2d
I
5
I
3
I
c
I
2d
I
1f
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
x
13
attach_method
p
9
I
0
I
30
I
0
I
2f
I
4
I
1
I
a
I
2f
I
1f
x
59
/more/vic/hk/fancy-lang/lib/compiler/ast/expression_list.fy
p
0
