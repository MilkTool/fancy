!RBIX
0
x
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
5
x
5
Stack
x
10
open_class
x
14
__class_init__
M
1
n
n
x
5
Stack
i
158
5
66
7
0
64
15
5
49
1
0
15
99
7
2
7
3
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
6
7
7
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
8
7
9
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
10
7
11
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
12
7
13
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
14
7
15
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
16
7
17
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
18
7
19
65
67
49
4
0
49
5
4
11
I
5
I
0
I
0
I
0
n
p
20
s
41
""
  A simple Stack container class.
  ""
x
6
public
x
11
:initialize
M
1
n
n
x
11
:initialize
i
5
35
0
38
0
11
I
1
I
0
I
0
I
0
n
p
1
x
4
@arr
p
5
I
0
I
8
I
0
I
7
I
5
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
x
17
method_visibility
x
15
add_defn_method
x
11
initialize:
M
1
n
n
x
11
initialize:
i
15
7
0
64
15
45
1
2
20
0
49
3
1
38
4
11
I
3
I
1
I
1
I
1
n
p
5
s
42
Initializes a new Stack with a given size.
x
5
Array
n
x
4
new:
x
4
@arr
p
11
I
0
I
e
I
0
I
c
I
0
I
b
I
4
I
d
I
9
I
e
I
f
x
31
/more/vic/hk/fancy/lib/stack.fy
p
1
x
4
size
x
5
push:
M
1
n
n
x
5
push:
i
12
7
0
64
15
39
1
20
0
49
2
1
11
I
3
I
1
I
1
I
1
n
p
3
s
30
Pushes a value onto the Stack.
x
4
@arr
x
3
:<<
p
9
I
0
I
14
I
0
I
12
I
0
I
11
I
4
I
13
I
c
x
31
/more/vic/hk/fancy/lib/stack.fy
p
1
x
3
obj
x
3
:<<
M
1
n
n
x
3
:<<
i
12
7
0
64
15
39
1
20
0
49
2
1
11
I
3
I
1
I
1
I
1
n
p
3
s
20
Same as Stack#push:.
x
4
@arr
x
3
:<<
p
9
I
0
I
1a
I
0
I
18
I
0
I
17
I
4
I
19
I
c
x
31
/more/vic/hk/fancy/lib/stack.fy
p
1
x
3
obj
x
4
:pop
M
1
n
n
x
4
:pop
i
19
7
0
64
15
39
1
5
47
49
2
0
79
49
3
1
49
4
1
11
I
3
I
0
I
0
I
0
n
p
5
s
60
Pops the top-of-stack element from the Stack and returns it.
x
4
@arr
x
5
:size
x
2
:-
x
10
remove_at:
p
11
I
0
I
20
I
0
I
1e
I
0
I
1d
I
4
I
1f
I
f
I
20
I
13
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
x
4
:top
M
1
n
n
x
4
:top
i
10
7
0
64
15
39
1
49
2
0
11
I
1
I
0
I
0
I
0
n
p
3
s
33
Returns the top-of-stack element.
x
4
@arr
x
5
:last
p
9
I
0
I
26
I
0
I
24
I
0
I
23
I
4
I
25
I
a
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
x
5
:size
M
1
n
n
x
5
:size
i
10
7
0
64
15
39
1
49
2
0
11
I
1
I
0
I
0
I
0
n
p
3
s
30
Returns the size of the Stack.
x
4
@arr
x
5
:size
p
9
I
0
I
2c
I
0
I
2a
I
0
I
29
I
4
I
2b
I
a
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
x
7
:empty?
M
1
n
n
x
7
:empty?
i
10
7
0
64
15
39
1
49
2
0
11
I
1
I
0
I
0
I
0
n
p
3
s
33
Indicates, if the Stack is empty.
x
4
@arr
x
7
:empty?
p
9
I
0
I
32
I
0
I
30
I
0
I
2f
I
4
I
31
I
a
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
p
19
I
2
I
4
I
b
I
8
I
19
I
e
I
2c
I
14
I
44
I
1a
I
57
I
20
I
6a
I
26
I
7d
I
2c
I
90
I
32
I
9e
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
x
13
attach_method
p
5
I
0
I
34
I
0
I
33
I
1d
x
31
/more/vic/hk/fancy/lib/stack.fy
p
0
