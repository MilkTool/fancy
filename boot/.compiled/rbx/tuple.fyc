!RBIX
8876994460201244843
x
M
1
n
n
x
10
__script__
i
41
65
7
0
45
1
2
43
0
49
3
2
15
99
7
0
1
65
49
4
3
13
99
12
7
5
12
7
6
12
65
12
49
7
4
15
49
5
0
15
2
11
I
6
I
0
I
0
I
0
n
p
8
x
5
Tuple
x
8
Rubinius
n
x
9
const_set
x
10
open_class
x
14
__class_init__
M
1
n
n
x
5
Tuple
i
109
5
66
7
0
64
15
5
7
1
47
49
2
1
15
5
49
3
0
15
99
7
4
7
5
65
67
49
6
0
49
7
4
15
5
49
3
0
15
99
7
8
7
9
65
67
49
6
0
49
7
4
15
5
49
3
0
15
99
7
10
7
11
65
67
49
6
0
49
7
4
15
5
49
3
0
15
99
7
12
7
13
65
67
49
6
0
49
7
4
15
5
49
3
0
15
99
7
14
7
15
65
67
49
6
0
49
7
4
11
I
5
I
0
I
0
I
0
n
p
16
s
90
""
  Tuples are fixed-size containers providing index-based access to its
  elements.
  ""
x
4
size
x
11
ruby_alias:
x
6
public
x
11
initialize:
M
1
n
n
x
11
initialize:
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
180
""
    @size Size of the @Tuple@ (amount of values to hold).

    Initializes a new @Tuple@ with a given amount of element slots.
    E.g. if @size is @2, creates a 2-Tuple.
    ""
x
10
initialize
p
13
I
0
I
13
I
0
I
11
I
0
I
10
I
4
I
13
I
5
I
12
I
7
I
13
I
c
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
1
x
4
size
x
17
method_visibility
x
15
add_defn_method
x
3
:[]
M
1
n
n
x
3
:[]
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
38
""
    Forwards to @Tuple#at:@.
    ""
x
3
at:
p
13
I
0
I
1b
I
0
I
19
I
0
I
18
I
4
I
1b
I
5
I
1a
I
7
I
1b
I
c
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
1
x
3
idx
x
3
at:
M
1
n
n
x
3
at:
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
219
""
    @idx Index for the element to get.
    @return Element at the given index within the @Tuple@ or @nil.

    Returns an element at a given indes.
    Possibly throws an @Rubinius::ObjectBoundsExceededError@.
    ""
x
2
at
p
13
I
0
I
27
I
0
I
25
I
0
I
24
I
4
I
27
I
5
I
26
I
7
I
27
I
c
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
1
x
3
idx
x
7
at:put:
M
1
n
n
x
7
at:put:
i
14
7
0
64
15
5
20
0
20
1
47
49
1
2
11
I
5
I
2
I
2
I
2
n
p
2
s
135
""
    @idx Index of element to set.
    @val Value to set at given index.

    Sets a value for a given index within a @Tuple@.
    ""
x
3
put
p
13
I
0
I
31
I
0
I
30
I
0
I
2f
I
4
I
31
I
5
I
30
I
9
I
31
I
e
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
2
x
3
idx
x
3
val
x
3
:==
M
1
n
n
x
3
:==
i
21
7
0
64
15
20
0
45
1
2
49
3
1
56
4
49
5
1
15
3
31
11
I
3
I
1
I
1
I
1
n
p
6
s
172
""
    @other Other @Tuple@ to compare @self with.
    @return @true, if tuples are equal element-wise, @false otherwise.

    Compares two @Tuple@s with each other.
    ""
x
5
Tuple
n
x
6
is_a?:
M
1
p
2
x
9
for_block
t
n
x
3
:==
i
20
5
47
49
0
0
21
1
0
49
0
0
49
1
1
56
2
49
3
1
11
I
3
I
0
I
0
I
0
n
p
4
x
5
:size
x
3
:==
M
1
p
2
x
9
for_block
t
n
x
3
:==
i
14
5
47
49
0
0
56
1
49
2
1
15
2
31
11
I
3
I
0
I
0
I
0
n
p
3
x
5
:size
M
1
p
2
x
9
for_block
t
n
x
3
:==
i
28
57
19
0
15
5
20
0
47
49
0
1
21
3
0
20
0
49
0
1
49
1
1
56
2
49
3
1
11
I
5
I
1
I
1
I
1
n
p
4
x
3
:[]
x
3
:==
M
1
p
2
x
9
for_block
t
n
x
3
:==
i
3
3
31
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
40
I
3
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
0
x
9
if_false:
p
9
I
0
I
41
I
4
I
3e
I
16
I
40
I
18
I
41
I
1c
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
1
x
1
i
x
6
times:
p
11
I
0
I
43
I
0
I
42
I
0
I
3d
I
5
I
41
I
7
I
42
I
e
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
0
x
8
if_true:
p
9
I
0
I
44
I
0
I
3c
I
e
I
43
I
10
I
44
I
14
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
0
x
8
if_true:
p
13
I
0
I
46
I
0
I
3a
I
0
I
39
I
4
I
3b
I
c
I
44
I
e
I
45
I
15
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
1
x
5
other
p
19
I
2
I
6
I
6
I
9
I
7
I
8
I
9
I
9
I
e
I
13
I
26
I
1b
I
34
I
27
I
47
I
31
I
5f
I
46
I
6d
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
0
x
13
attach_method
p
7
I
0
I
2
I
0
I
1
I
c
I
47
I
29
x
40
/more/vic/hk/fancy-lang/lib/rbx/tuple.fy
p
0
