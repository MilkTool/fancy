!RBIX
0
x
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
5
x
5
Block
x
10
open_class
x
14
__class_init__
M
1
n
n
x
5
Block
i
59
5
66
5
49
0
0
15
99
7
1
7
2
65
67
49
3
0
49
4
4
15
5
49
0
0
15
99
7
5
7
6
65
67
49
3
0
49
4
4
15
5
49
0
0
15
99
7
7
7
8
65
67
49
3
0
49
4
4
11
I
5
I
0
I
0
I
0
n
p
9
x
6
public
x
3
if:
M
1
n
n
x
3
if:
i
15
7
0
64
15
20
0
49
1
0
56
2
49
3
1
11
I
3
I
1
I
1
I
1
n
p
4
s
45
Calls itself if the given object is true-ish.
x
5
:nil?
M
1
p
2
x
9
for_block
t
n
x
3
if:
i
12
21
1
0
49
0
0
56
1
49
2
1
11
I
3
I
0
I
0
I
0
n
p
3
x
7
:false?
M
1
p
2
x
9
for_block
t
n
x
3
if:
i
6
5
47
49
0
0
11
I
2
I
0
I
0
I
0
n
p
1
x
5
:call
p
5
I
0
I
a
I
0
I
9
I
6
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
0
x
9
if_false:
p
9
I
0
I
b
I
0
I
8
I
6
I
a
I
8
I
b
I
c
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
0
x
9
if_false:
p
13
I
0
I
c
I
0
I
6
I
0
I
5
I
4
I
7
I
9
I
b
I
b
I
c
I
f
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
1
x
3
obj
x
17
method_visibility
x
15
add_defn_method
x
7
unless:
M
1
n
n
x
7
unless:
i
23
7
0
64
15
20
0
49
1
0
20
0
49
2
0
49
3
1
56
4
49
5
1
11
I
3
I
1
I
1
I
1
n
p
6
s
69
Opposite of Block#if:. Calls itself if the given object is false-ish.
x
5
:nil?
x
7
:false?
x
3
:||
M
1
p
2
x
9
for_block
t
n
x
7
unless:
i
6
5
47
49
0
0
11
I
2
I
0
I
0
I
0
n
p
1
x
5
:call
p
5
I
0
I
13
I
0
I
12
I
6
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
0
x
8
if_true:
p
13
I
0
I
14
I
0
I
10
I
0
I
f
I
4
I
11
I
11
I
13
I
13
I
14
I
17
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
1
x
3
obj
x
9
:argcount
M
1
n
n
x
9
:argcount
i
10
7
0
64
15
5
47
49
1
0
11
I
1
I
0
I
0
I
0
n
p
2
s
54
Returns the amount of arguments (arity) a Block takes.
x
5
arity
p
9
I
0
I
1a
I
0
I
18
I
0
I
17
I
4
I
1a
I
a
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
0
p
7
I
2
I
c
I
15
I
14
I
2d
I
1a
I
3b
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
0
x
13
attach_method
p
5
I
0
I
1c
I
0
I
1b
I
1d
x
35
/more/vic/hk/fancy/lib/rbx/block.fy
p
0
