!RBIX
0
x
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
5
x
4
Hash
x
10
open_class
x
14
__class_init__
M
1
n
n
x
4
Hash
i
129
5
66
7
0
64
15
5
45
1
2
47
49
3
1
15
5
49
4
0
15
99
7
5
7
6
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
9
7
10
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
11
7
12
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
13
7
14
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
15
7
16
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
17
7
18
65
67
49
7
0
49
8
4
11
I
5
I
0
I
0
I
0
n
p
19
s
78
""
  Class for Hashes (HashMaps / Dictionaries).
  Maps a key to a value.
  ""
x
15
FancyEnumerable
n
x
8
include:
x
6
public
x
3
:[]
M
1
n
n
x
3
:[]
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
34
Returns the value for a given key.
x
3
at:
p
13
I
0
I
d
I
0
I
b
I
0
I
a
I
4
I
d
I
5
I
c
I
7
I
d
I
c
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
3
key
x
17
method_visibility
x
15
add_defn_method
x
5
each:
M
1
n
n
x
5
each:
i
24
7
0
64
15
20
0
47
49
1
0
79
47
49
2
1
56
3
56
4
47
49
5
2
11
I
4
I
1
I
1
I
1
n
p
6
s
44
Calls a given Block with each key and value.
x
9
:argcount
x
3
:==
M
1
p
2
x
9
for_block
t
n
x
5
each:
i
12
5
47
49
0
0
56
1
47
49
2
1
11
I
3
I
0
I
0
I
0
n
p
3
x
5
:keys
M
1
p
2
x
9
for_block
t
n
x
5
each:
i
25
57
19
0
15
21
2
0
20
0
5
20
0
47
49
0
1
35
2
35
1
47
49
1
1
11
I
6
I
1
I
1
I
1
n
p
2
x
3
at:
x
5
call:
p
7
I
0
I
15
I
4
I
14
I
14
I
15
I
19
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
3
key
x
5
each:
p
9
I
0
I
16
I
0
I
13
I
5
I
15
I
7
I
16
I
c
x
30
/more/vic/hk/fancy/lib/hash.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
5
each:
i
12
5
47
49
0
0
56
1
47
49
2
1
11
I
3
I
0
I
0
I
0
n
p
3
x
5
:keys
M
1
p
2
x
9
for_block
t
n
x
5
each:
i
23
57
19
0
15
21
2
0
20
0
5
20
0
47
49
0
1
35
2
47
49
1
1
11
I
6
I
1
I
1
I
1
n
p
2
x
3
at:
x
5
call:
p
7
I
0
I
19
I
4
I
18
I
12
I
19
I
17
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
3
key
x
5
each:
p
9
I
0
I
1a
I
0
I
17
I
5
I
19
I
7
I
1a
I
c
x
30
/more/vic/hk/fancy/lib/hash.fy
p
0
x
13
if_true:else:
p
15
I
0
I
1b
I
0
I
11
I
0
I
10
I
4
I
12
I
f
I
16
I
11
I
1a
I
13
I
1b
I
18
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
5
block
x
9
each_key:
M
1
n
n
x
9
each_key:
i
16
7
0
64
15
5
47
49
1
0
56
2
47
49
3
1
11
I
3
I
1
I
1
I
1
n
p
4
s
34
Calls a given Block with each key.
x
5
:keys
M
1
p
2
x
9
for_block
t
n
x
9
each_key:
i
16
57
19
0
15
21
1
0
20
0
35
1
47
49
0
1
11
I
4
I
1
I
1
I
1
n
p
1
x
5
call:
p
7
I
0
I
22
I
4
I
21
I
b
I
22
I
10
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
3
key
x
5
each:
p
13
I
0
I
23
I
0
I
1f
I
0
I
1e
I
4
I
20
I
9
I
22
I
b
I
23
I
10
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
5
block
x
11
each_value:
M
1
n
n
x
11
each_value:
i
16
7
0
64
15
5
47
49
1
0
56
2
47
49
3
1
11
I
3
I
1
I
1
I
1
n
p
4
s
36
Calls a given Block with each value.
x
7
:values
M
1
p
2
x
9
for_block
t
n
x
11
each_value:
i
16
57
19
0
15
21
1
0
20
0
35
1
47
49
0
1
11
I
4
I
1
I
1
I
1
n
p
1
x
5
call:
p
7
I
0
I
2a
I
4
I
29
I
b
I
2a
I
10
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
3
val
x
5
each:
p
13
I
0
I
2b
I
0
I
27
I
0
I
26
I
4
I
28
I
9
I
2a
I
b
I
2b
I
10
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
5
block
x
5
:to_a
M
1
n
n
x
5
:to_a
i
12
7
0
64
15
5
56
1
47
49
2
1
11
I
2
I
0
I
0
I
0
n
p
3
s
50
Returns an Array of the key-value pairs in a Hash.
M
1
p
2
x
9
for_block
t
n
x
5
:to_a
i
7
57
19
0
15
20
0
11
I
3
I
1
I
1
I
1
n
p
0
p
3
I
0
I
30
I
7
x
30
/more/vic/hk/fancy/lib/hash.fy
p
1
x
4
pair
x
4
map:
p
13
I
0
I
31
I
0
I
2f
I
0
I
2e
I
4
I
31
I
5
I
30
I
7
I
31
I
c
x
30
/more/vic/hk/fancy/lib/hash.fy
p
0
x
5
:to_s
M
1
n
n
x
5
:to_s
i
14
7
0
64
15
5
47
49
1
0
47
49
2
0
11
I
1
I
0
I
0
I
0
n
p
3
s
42
Returns a string representation of a Hash.
x
5
:to_a
x
5
:to_s
p
9
I
0
I
37
I
0
I
35
I
0
I
34
I
4
I
36
I
e
x
30
/more/vic/hk/fancy/lib/hash.fy
p
0
p
21
I
2
I
5
I
6
I
8
I
7
I
7
I
a
I
8
I
14
I
d
I
22
I
1b
I
35
I
23
I
48
I
2b
I
60
I
31
I
73
I
37
I
81
x
30
/more/vic/hk/fancy/lib/hash.fy
p
0
x
13
attach_method
p
5
I
0
I
39
I
0
I
38
I
1d
x
30
/more/vic/hk/fancy/lib/hash.fy
p
0
