!RBIX
0
x
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
5
x
6
String
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
String
i
110
5
66
7
0
64
15
5
45
1
2
47
49
3
1
15
5
49
4
0
15
99
7
5
7
6
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
9
7
10
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
11
7
12
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
13
7
14
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
15
7
16
65
67
49
7
0
49
8
4
11
I
5
I
0
I
0
I
0
n
p
17
s
275
""
  Strings are sequences of characters and behave as such.
  All literal Strings within Fancy code are instances of the String
  class.

  They also include FancyEnumerable, which means you can use all the
  common sequence methods on them, like +map:+, +select:+ etc.
  ""
x
15
FancyEnumerable
n
x
8
include:
x
6
public
x
3
:++
M
1
n
n
x
3
:++
i
15
7
0
64
15
5
20
0
49
1
0
47
49
2
1
11
I
3
I
1
I
1
I
1
n
p
3
s
42
Concatenate the String with another String
x
5
:to_s
x
2
:+
p
9
I
0
I
11
I
0
I
f
I
0
I
e
I
4
I
10
I
f
x
32
/more/vic/hk/fancy/lib/string.fy
p
1
x
5
other
x
17
method_visibility
x
15
add_defn_method
x
12
:whitespace?
M
1
n
n
x
12
:whitespace?
i
21
7
0
64
15
5
47
49
1
0
5
7
2
64
47
49
3
1
49
4
1
11
I
3
I
0
I
0
I
0
n
p
5
s
65
Indicates, if a String is empty or a single whitespace character.
x
7
:empty?
s
1
 
x
3
:==
x
3
or:
p
11
I
0
I
17
I
0
I
15
I
0
I
14
I
4
I
16
I
11
I
17
I
15
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
x
7
:blank?
M
1
n
n
x
7
:blank?
i
35
7
0
64
15
5
7
1
13
70
9
23
15
44
43
2
7
3
78
49
4
2
6
1
47
49
5
1
56
6
56
7
49
8
2
11
I
4
I
0
I
0
I
0
n
p
9
s
51
Indicates, if a String consists only of whitespace.
n
x
6
Regexp
s
5
^\s*$
x
3
new
x
3
:=~
M
1
p
2
x
9
for_block
t
n
x
7
:blank?
i
2
2
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
1e
I
2
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
7
:blank?
i
2
3
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
20
I
2
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
x
11
if_do:else:
p
15
I
0
I
21
I
0
I
1b
I
0
I
1a
I
4
I
1c
I
1b
I
1e
I
1d
I
20
I
1f
I
21
I
23
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
x
2
:*
M
1
n
n
x
2
:*
i
24
7
0
64
15
7
1
64
19
1
15
20
0
49
2
0
56
3
49
4
1
15
20
1
11
I
4
I
2
I
1
I
1
n
p
5
s
62
Returns a string that is the num-fold concatenation of itself.
s
0

x
5
:to_i
M
1
p
2
x
9
for_block
t
n
x
2
:*
i
11
21
1
1
5
49
0
1
22
1
1
11
I
3
I
0
I
0
I
0
n
p
1
x
3
:++
p
5
I
0
I
29
I
0
I
28
I
b
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
x
6
times:
p
15
I
0
I
2b
I
0
I
25
I
0
I
24
I
4
I
26
I
a
I
27
I
f
I
29
I
11
I
2a
I
18
x
32
/more/vic/hk/fancy/lib/string.fy
p
2
x
3
num
x
3
str
x
7
:raise!
M
1
n
n
x
7
:raise!
i
15
7
0
64
15
45
1
2
5
49
3
1
49
4
0
11
I
2
I
0
I
0
I
0
n
p
5
s
47
Raises a new StdError with self as the message.
x
8
StdError
n
x
4
new:
x
7
:raise!
p
9
I
0
I
30
I
0
I
2f
I
0
I
2e
I
4
I
2f
I
f
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
p
19
I
2
I
9
I
6
I
c
I
7
I
b
I
a
I
c
I
14
I
11
I
27
I
17
I
3a
I
21
I
4d
I
2b
I
60
I
30
I
6e
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
x
13
attach_method
p
5
I
0
I
32
I
0
I
31
I
1d
x
32
/more/vic/hk/fancy/lib/string.fy
p
0
