!RBIX
0
x
M
1
n
n
x
10
__script__
i
83
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
99
7
5
1
65
49
1
3
13
99
12
7
2
12
7
6
12
65
12
49
4
4
15
49
2
0
15
99
7
7
1
65
49
1
3
13
99
12
7
2
12
7
8
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
9
x
5
Class
x
10
open_class
x
14
__class_init__
M
1
n
n
x
5
Class
i
40
5
66
5
49
0
0
15
99
7
1
7
2
65
67
49
3
0
49
4
4
15
5
49
0
0
15
99
7
5
7
6
65
67
49
3
0
49
4
4
11
I
5
I
0
I
0
I
0
n
p
7
x
6
public
x
17
alias_method:for:
M
1
n
n
x
17
alias_method:for:
i
10
5
20
0
20
1
47
49
0
2
11
I
5
I
2
I
2
I
2
n
p
1
x
12
alias_method
p
7
I
0
I
4
I
1
I
3
I
5
I
4
I
a
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
2
x
3
new
x
3
old
x
17
method_visibility
x
15
add_defn_method
x
11
ruby_alias:
M
1
n
n
x
11
ruby_alias:
i
21
5
7
0
64
20
0
47
49
1
0
47
49
2
1
20
0
47
49
3
2
11
I
4
I
1
I
1
I
1
n
p
4
s
1
:
x
5
:to_s
x
2
:+
x
17
alias_method:for:
p
7
I
0
I
8
I
1
I
7
I
10
I
8
I
15
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
11
method_name
p
5
I
2
I
4
I
15
I
8
I
28
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
13
attach_method
x
6
String
M
1
n
n
x
6
String
i
14
5
66
5
7
0
64
7
1
64
47
49
2
2
11
I
3
I
0
I
0
I
0
n
p
3
s
2
:+
s
1
+
x
17
alias_method:for:
p
7
I
2
I
d
I
3
I
c
I
9
I
d
I
e
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
6
Object
M
1
n
n
x
6
Object
i
349
5
66
5
7
0
47
49
1
1
15
5
7
2
47
49
1
1
15
5
7
3
47
49
1
1
15
5
49
4
0
15
99
7
5
7
6
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
9
7
10
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
11
7
12
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
13
7
14
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
15
7
16
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
17
7
18
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
19
7
20
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
21
7
22
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
23
7
24
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
25
7
26
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
27
7
28
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
29
7
30
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
31
7
32
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
33
7
34
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
35
7
36
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
37
7
38
65
67
49
7
0
49
8
4
15
5
49
4
0
15
99
7
39
7
40
65
67
49
7
0
49
8
4
11
I
5
I
0
I
0
I
0
n
p
41
x
2
==
x
11
ruby_alias:
x
3
===
x
5
class
x
6
public
x
11
:initialize
M
1
n
n
x
11
:initialize
i
6
5
47
49
0
0
11
I
1
I
0
I
0
I
0
n
p
1
x
10
initialize
p
7
I
0
I
17
I
0
I
16
I
1
I
17
I
6
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
17
method_visibility
x
15
add_defn_method
x
7
:dclone
M
1
n
n
x
7
:dclone
i
20
7
0
64
15
45
1
2
45
1
3
5
47
49
4
1
47
49
5
1
11
I
3
I
0
I
0
I
0
n
p
6
s
56
Returns a deep clone of self using Ruby's Marshal class.
x
7
Marshal
n
n
x
5
dump:
x
5
load:
p
11
I
0
I
1c
I
0
I
1b
I
0
I
1a
I
4
I
1b
I
b
I
1c
I
14
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
3
:++
M
1
n
n
x
3
:++
i
16
5
47
49
0
0
20
0
47
49
0
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
x
5
:to_s
x
2
:+
p
5
I
0
I
20
I
0
I
1f
I
10
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
5
other
x
5
:to_s
M
1
n
n
x
5
:to_s
i
6
5
47
49
0
0
11
I
1
I
0
I
0
I
0
n
p
1
x
4
to_s
p
7
I
0
I
24
I
0
I
23
I
1
I
24
I
6
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
8
:inspect
M
1
n
n
x
8
:inspect
i
6
5
47
49
0
0
11
I
1
I
0
I
0
I
0
n
p
1
x
7
inspect
p
7
I
0
I
28
I
0
I
27
I
1
I
28
I
6
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
15
set_slot:value:
M
1
n
n
x
15
set_slot:value:
i
17
5
7
0
64
20
0
47
49
1
1
20
1
47
49
2
2
11
I
5
I
2
I
2
I
2
n
p
3
s
1
@
x
3
:++
x
21
instance_variable_set
p
7
I
0
I
2c
I
1
I
2b
I
c
I
2c
I
11
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
2
x
8
slotname
x
3
val
x
9
get_slot:
M
1
n
n
x
9
get_slot:
i
15
5
7
0
64
20
0
47
49
1
1
47
49
2
1
11
I
4
I
1
I
1
I
1
n
p
3
s
1
@
x
3
:++
x
21
instance_variable_get
p
7
I
0
I
30
I
1
I
2f
I
a
I
30
I
f
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
8
slotname
x
4
and:
M
1
n
n
x
4
and:
i
15
7
0
64
15
5
56
1
47
49
2
1
15
3
31
11
I
3
I
1
I
1
I
1
n
p
3
s
94
""
    Boolean conjunction.
    Returns true if self and other are true, otherwise nil.
    ""
M
1
p
2
x
9
for_block
t
n
x
4
and:
i
10
21
1
0
56
0
47
49
1
1
11
I
3
I
0
I
0
I
0
n
p
2
M
1
p
2
x
9
for_block
t
n
x
4
and:
i
3
2
31
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
3b
I
3
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
6
if_do:
p
9
I
0
I
3c
I
0
I
39
I
3
I
3b
I
5
I
3c
I
a
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
6
if_do:
p
13
I
0
I
3e
I
0
I
37
I
0
I
36
I
4
I
38
I
5
I
3c
I
7
I
3d
I
f
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
5
other
x
3
or:
M
1
n
n
x
3
or:
i
17
7
0
64
15
5
56
1
56
2
47
49
3
2
15
3
31
11
I
4
I
1
I
1
I
1
n
p
4
s
99
""
    Boolean disjunction.
    Returns true if either self or other is true, otherwise nil.
    ""
M
1
p
2
x
9
for_block
t
n
x
3
or:
i
3
2
31
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
47
I
3
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
3
or:
i
10
21
1
0
56
0
47
49
1
1
11
I
3
I
0
I
0
I
0
n
p
2
M
1
p
2
x
9
for_block
t
n
x
3
or:
i
3
2
31
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
4a
I
3
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
6
if_do:
p
9
I
0
I
4b
I
0
I
48
I
3
I
4a
I
5
I
4b
I
a
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
11
if_do:else:
p
15
I
0
I
4d
I
0
I
45
I
0
I
44
I
4
I
45
I
5
I
47
I
7
I
4b
I
9
I
4c
I
11
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
5
other
x
29
define_singleton_method:with:
M
1
n
n
x
29
define_singleton_method:with:
i
14
5
47
49
0
0
20
0
20
1
47
49
1
2
11
I
5
I
2
I
2
I
2
n
p
2
x
10
:metaclass
x
19
define_method:with:
p
7
I
0
I
51
I
0
I
50
I
9
I
51
I
e
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
2
x
4
name
x
5
block
x
26
undefine_singleton_method:
M
1
n
n
x
26
undefine_singleton_method:
i
12
5
47
49
0
0
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
x
10
:metaclass
x
16
undefine_method:
p
7
I
0
I
55
I
0
I
54
I
7
I
55
I
c
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
4
name
x
6
is_a?:
M
1
n
n
x
6
is_a?:
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
56
Indicates, if an object is an instance of a given Class.
x
5
is_a?
p
13
I
0
I
5a
I
0
I
59
I
0
I
58
I
4
I
5a
I
5
I
59
I
7
I
5a
I
c
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
5
class
x
9
kind_of?:
M
1
n
n
x
9
kind_of?:
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
56
Indicates, if an object is an instance of a given Class.
x
8
kind_of?
p
13
I
0
I
5f
I
0
I
5e
I
0
I
5d
I
4
I
5f
I
5
I
5e
I
7
I
5f
I
c
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
5
class
x
5
send:
M
1
n
n
x
5
send:
i
13
5
5
20
0
47
49
0
1
47
49
1
1
11
I
4
I
1
I
1
I
1
n
p
2
x
13
message_name:
x
4
send
p
7
I
0
I
63
I
0
I
62
I
8
I
63
I
d
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
7
message
x
12
send:params:
M
1
n
n
x
12
send:params:
i
15
5
5
20
0
47
49
0
1
20
1
47
49
1
2
11
I
5
I
2
I
2
I
2
n
p
2
x
13
message_name:
x
10
ruby:args:
p
7
I
0
I
67
I
1
I
66
I
a
I
67
I
f
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
2
x
7
message
x
6
params
x
13
message_name:
M
1
n
n
x
13
message_name:
i
27
20
0
47
49
0
0
19
0
15
20
0
7
1
64
47
49
2
1
56
3
56
4
47
49
5
2
11
I
4
I
1
I
1
I
1
n
p
6
x
5
:to_s
s
1
:
x
10
includes?:
M
1
p
2
x
9
for_block
t
n
x
13
message_name:
i
4
21
1
0
11
I
2
I
0
I
0
I
0
n
p
0
p
5
I
0
I
6d
I
0
I
6c
I
4
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
13
message_name:
i
11
7
0
64
21
1
0
47
49
1
1
11
I
3
I
0
I
0
I
0
n
p
2
s
1
:
x
3
:++
p
5
I
0
I
6f
I
0
I
6e
I
b
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
x
13
if_true:else:
p
15
I
0
I
70
I
0
I
6b
I
0
I
6a
I
9
I
6b
I
12
I
6d
I
14
I
6f
I
16
I
70
I
1b
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
6
symbol
x
13
responds_to?:
M
1
n
n
x
13
responds_to?:
i
13
5
5
20
0
47
49
0
1
47
49
1
1
11
I
4
I
1
I
1
I
1
n
p
2
x
13
message_name:
x
11
respond_to?
p
7
I
0
I
74
I
0
I
73
I
8
I
74
I
d
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
1
x
7
message
p
53
I
2
I
12
I
3
I
11
I
5
I
12
I
a
I
13
I
b
I
12
I
d
I
13
I
12
I
14
I
13
I
13
I
15
I
14
I
1f
I
17
I
32
I
1c
I
45
I
20
I
58
I
24
I
6b
I
28
I
79
I
2c
I
8c
I
30
I
9f
I
3e
I
b2
I
4d
I
c5
I
51
I
d8
I
55
I
eb
I
5a
I
fe
I
5f
I
111
I
63
I
124
I
67
I
137
I
70
I
14a
I
74
I
15d
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
p
9
I
0
I
a
I
0
I
9
I
1b
I
d
I
36
I
75
I
53
x
36
/more/vic/hk/fancy/lib/rbx/object.fy
p
0
