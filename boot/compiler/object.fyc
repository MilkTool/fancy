!RBIX
0
x
M
1
n
n
x
10
__script__
i
29
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
5
x
6
Object
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
Object
i
519
5
66
7
0
64
15
5
49
1
0
15
99
7
2
7
3
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
6
7
7
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
8
7
9
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
10
7
11
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
12
7
13
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
14
7
15
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
16
7
17
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
18
7
19
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
20
7
21
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
22
7
23
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
24
7
25
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
26
7
27
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
28
7
29
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
30
7
31
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
32
7
33
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
34
7
35
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
36
7
37
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
38
7
39
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
40
7
41
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
42
7
43
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
44
7
45
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
46
7
47
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
48
7
49
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
50
7
51
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
52
7
53
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
54
7
55
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
56
7
57
65
67
49
4
0
49
5
4
11
I
5
I
0
I
0
I
0
n
p
58
s
83
""
  Root class of Fancy's class hierarchy.
  All classes inherit from Object.
  ""
x
6
public
x
5
loop:
M
1
n
n
x
5
loop:
i
12
7
0
64
15
56
1
56
2
49
3
1
11
I
3
I
1
I
1
I
1
n
p
4
s
35
Infinitely calls the block (loops).
M
1
p
2
x
9
for_block
t
n
x
5
loop:
i
2
2
11
I
2
I
0
I
0
I
0
n
p
0
p
3
I
0
I
9
I
2
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
5
loop:
i
7
21
1
0
49
0
0
11
I
2
I
0
I
0
I
0
n
p
1
x
5
:call
p
5
I
0
I
b
I
0
I
a
I
7
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
11
while_true:
p
13
I
0
I
c
I
0
I
9
I
0
I
8
I
4
I
9
I
6
I
b
I
8
I
c
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
block
x
17
method_visibility
x
15
add_defn_method
x
8
:println
M
1
n
n
x
8
:println
i
16
7
0
64
15
45
1
2
5
47
49
3
0
49
4
1
11
I
2
I
0
I
0
I
0
n
p
5
s
82
Same as Console println: self. Prints the object on STDOUT, followed by a newline.
x
7
Console
n
x
5
:to_s
x
8
println:
p
11
I
0
I
11
I
0
I
10
I
0
I
f
I
4
I
10
I
c
I
11
I
10
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
6
:print
M
1
n
n
x
6
:print
i
16
7
0
64
15
45
1
2
5
47
49
3
0
49
4
1
11
I
2
I
0
I
0
I
0
n
p
5
s
57
Same as Console print: self. Prints the object on STDOUT.
x
7
Console
n
x
5
:to_s
x
6
print:
p
11
I
0
I
16
I
0
I
15
I
0
I
14
I
4
I
15
I
c
I
16
I
10
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
3
:!=
M
1
n
n
x
3
:!=
i
15
7
0
64
15
5
20
0
47
49
1
1
49
2
0
11
I
3
I
1
I
1
I
1
n
p
3
s
38
Indicates, if two objects are unequal.
x
3
:==
x
4
:not
p
9
I
0
I
1b
I
0
I
1a
I
0
I
19
I
4
I
1a
I
f
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
other
x
9
if_false:
M
1
n
n
x
9
if_false:
i
6
7
0
64
15
1
11
I
2
I
1
I
1
I
1
n
p
1
s
16
Calls the block.
p
7
I
0
I
20
I
0
I
1f
I
0
I
1e
I
6
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
block
x
7
if_nil:
M
1
n
n
x
7
if_nil:
i
6
7
0
64
15
1
11
I
2
I
1
I
1
I
1
n
p
1
s
12
Returns nil.
p
7
I
0
I
25
I
0
I
24
I
0
I
23
I
6
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
block
x
5
:nil?
M
1
n
n
x
5
:nil?
i
6
7
0
64
15
1
11
I
1
I
0
I
0
I
0
n
p
1
s
12
Returns nil.
p
7
I
0
I
2a
I
0
I
29
I
0
I
28
I
6
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
7
:false?
M
1
n
n
x
7
:false?
i
6
7
0
64
15
1
11
I
1
I
0
I
0
I
0
n
p
1
s
12
Returns nil.
p
7
I
0
I
2f
I
0
I
2e
I
0
I
2d
I
6
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
6
:true?
M
1
n
n
x
6
:true?
i
6
7
0
64
15
1
11
I
1
I
0
I
0
I
0
n
p
1
s
12
Returns nil.
p
7
I
0
I
34
I
0
I
33
I
0
I
32
I
6
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
6
if_do:
M
1
n
n
x
6
if_do:
i
55
7
0
64
15
5
13
1
12
49
1
1
10
35
13
3
12
49
1
1
10
39
13
45
2
3
12
49
1
1
10
43
15
1
8
54
15
1
8
54
15
1
8
54
15
20
0
5
35
1
49
4
1
8
54
11
I
4
I
1
I
1
I
1
n
p
5
s
75
If the object is non-nil, it calls the given block with itself as argument.
x
4
:===
x
6
Object
n
x
5
call:
p
19
I
0
I
3e
I
0
I
38
I
0
I
37
I
4
I
39
I
16
I
3d
I
24
I
3b
I
28
I
3c
I
2c
I
3c
I
31
I
3d
I
37
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
block
x
11
if_do:else:
M
1
n
n
x
11
if_do:else:
i
69
7
0
64
15
5
13
1
12
49
1
1
10
35
13
3
12
49
1
1
10
46
13
45
2
3
12
49
1
1
10
57
15
1
8
68
15
20
1
5
35
1
49
4
1
8
68
15
20
1
5
35
1
49
4
1
8
68
15
20
0
5
35
1
49
4
1
8
68
11
I
5
I
2
I
2
I
2
n
p
5
s
132
""If the object is non-nil, it calls the given then_block with itself as argument.
       Otherwise it calls the given else_block.""
x
4
:===
x
6
Object
n
x
5
call:
p
23
I
0
I
49
I
0
I
43
I
0
I
42
I
4
I
44
I
16
I
48
I
24
I
45
I
29
I
46
I
2f
I
46
I
34
I
47
I
3a
I
47
I
3f
I
48
I
45
x
32
/more/vic/hk/fancy/lib/object.fy
p
2
x
10
then_block
x
10
else_block
x
8
or_take:
M
1
n
n
x
8
or_take:
i
17
7
0
64
15
5
47
49
1
0
56
2
56
3
49
4
2
11
I
4
I
1
I
1
I
1
n
p
5
s
65
Returns self if it's non-nil, otherwise returns the given object.
x
5
:nil?
M
1
p
2
x
9
for_block
t
n
x
8
or_take:
i
4
21
1
0
11
I
2
I
0
I
0
I
0
n
p
0
p
5
I
0
I
50
I
0
I
4f
I
4
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
8
or_take:
i
2
5
11
I
2
I
0
I
0
I
0
n
p
0
p
5
I
0
I
52
I
0
I
51
I
2
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
13
if_true:else:
p
15
I
0
I
53
I
0
I
4d
I
0
I
4c
I
4
I
4e
I
9
I
50
I
b
I
52
I
d
I
53
I
11
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
other
x
7
:to_num
M
1
n
n
x
7
:to_num
i
2
78
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
0
I
57
I
0
I
56
I
2
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
5
:to_a
M
1
n
n
x
5
:to_a
i
4
5
35
1
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
0
I
5b
I
0
I
5a
I
4
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
5
:to_i
M
1
n
n
x
5
:to_i
i
2
78
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
0
I
5f
I
0
I
5e
I
2
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
3
:||
M
1
n
n
x
3
:||
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
18
Same as Object#or:
x
3
or:
p
13
I
0
I
64
I
0
I
63
I
0
I
62
I
4
I
64
I
5
I
63
I
7
I
64
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
other
x
3
:&&
M
1
n
n
x
3
:&&
i
12
7
0
64
15
5
20
0
47
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
s
19
Same as Object#and:
x
4
and:
p
13
I
0
I
69
I
0
I
68
I
0
I
67
I
4
I
69
I
5
I
68
I
7
I
69
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
5
other
x
8
if:then:
M
1
n
n
x
8
if:then:
i
12
7
0
64
15
20
0
20
1
49
1
1
11
I
4
I
2
I
2
I
2
n
p
2
s
50
""
    Same as:
        cond if_true: block
    ""
x
8
if_true:
p
11
I
0
I
71
I
0
I
70
I
0
I
6f
I
4
I
70
I
8
I
71
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
2
x
4
cond
x
5
block
x
6
if:do:
M
1
n
n
x
6
if:do:
i
12
7
0
64
15
20
0
20
1
49
1
1
11
I
4
I
2
I
2
I
2
n
p
2
s
48
""
    Same as:
        cond if_do: block
    ""
x
6
if_do:
p
11
I
0
I
79
I
0
I
78
I
0
I
77
I
4
I
78
I
8
I
79
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
2
x
4
cond
x
5
block
x
13
if:then:else:
M
1
n
n
x
13
if:then:else:
i
14
7
0
64
15
20
0
20
1
20
2
49
1
2
11
I
6
I
3
I
3
I
3
n
p
2
s
72
""
    Same as:
        cond if_true: then_block else: else_block
    ""
x
13
if_true:else:
p
11
I
0
I
81
I
0
I
80
I
0
I
7f
I
4
I
80
I
a
I
81
I
e
x
32
/more/vic/hk/fancy/lib/object.fy
p
3
x
4
cond
x
10
then_block
x
10
else_block
x
11
if:do:else:
M
1
n
n
x
11
if:do:else:
i
14
7
0
64
15
20
0
20
1
20
2
49
1
2
11
I
6
I
3
I
3
I
3
n
p
2
s
70
""
    Same as:
        cond if_do: then_block else: else_block
    ""
x
11
if_do:else:
p
11
I
0
I
89
I
0
I
88
I
0
I
87
I
4
I
88
I
a
I
89
I
e
x
32
/more/vic/hk/fancy/lib/object.fy
p
3
x
4
cond
x
10
then_block
x
10
else_block
x
9
while:do:
M
1
n
n
x
9
while:do:
i
12
7
0
64
15
20
0
20
1
49
1
1
11
I
4
I
2
I
2
I
2
n
p
2
s
62
""
    Same as:
      cond_block while_true: body_block
    ""
x
11
while_true:
p
11
I
0
I
92
I
0
I
90
I
0
I
8f
I
4
I
91
I
8
I
92
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
2
x
10
cond_block
x
10
body_block
x
9
until:do:
M
1
n
n
x
9
until:do:
i
12
7
0
64
15
20
0
20
1
49
1
1
11
I
4
I
2
I
2
I
2
n
p
2
s
63
""
    Same as:
      cond_block while_false: body_block
    ""
x
12
while_false:
p
11
I
0
I
9b
I
0
I
99
I
0
I
98
I
4
I
9a
I
8
I
9b
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
2
x
10
cond_block
x
10
body_block
x
10
unless:do:
M
1
n
n
x
10
unless:do:
i
12
7
0
64
15
20
0
20
1
49
1
1
11
I
4
I
2
I
2
I
2
n
p
2
s
49
""
    Same as:
      cond if_false: block
    ""
x
9
if_false:
p
11
I
0
I
a4
I
0
I
a2
I
0
I
a1
I
4
I
a3
I
8
I
a4
I
c
x
32
/more/vic/hk/fancy/lib/object.fy
p
2
x
4
cond
x
5
block
x
7
method:
M
1
n
n
x
7
method:
i
17
7
0
64
15
5
5
20
0
47
49
1
1
47
49
2
1
11
I
4
I
1
I
1
I
1
n
p
3
s
58
Returns the method with a given name for self, if defined.
x
13
message_name:
x
6
method
p
13
I
0
I
aa
I
0
I
a8
I
0
I
a7
I
4
I
aa
I
5
I
a9
I
c
I
aa
I
11
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
11
method_name
x
14
:documentation
M
1
n
n
x
14
:documentation
i
17
7
0
64
15
45
1
2
43
3
5
49
4
1
49
5
0
11
I
2
I
0
I
0
I
0
n
p
6
s
47
Returns the documentation string for an Object.
x
5
Fancy
n
x
13
Documentation
x
4
for:
x
5
:to_s
p
9
I
0
I
af
I
0
I
ae
I
0
I
ad
I
4
I
ae
I
11
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
14
documentation:
M
1
n
n
x
14
documentation:
i
16
7
0
64
15
45
1
2
43
3
5
20
0
49
4
2
11
I
4
I
1
I
1
I
1
n
p
5
s
44
Sets the documentation string for an Object.
x
5
Fancy
n
x
13
Documentation
x
7
for:is:
p
11
I
0
I
b4
I
0
I
b3
I
0
I
b2
I
4
I
b3
I
c
I
b4
I
10
x
32
/more/vic/hk/fancy/lib/object.fy
p
1
x
3
str
p
57
I
2
I
5
I
6
I
c
I
1e
I
11
I
31
I
16
I
44
I
1b
I
52
I
20
I
65
I
25
I
7d
I
2a
I
90
I
2f
I
a3
I
34
I
b1
I
3e
I
c4
I
49
I
d7
I
53
I
ef
I
57
I
102
I
5b
I
115
I
5f
I
128
I
64
I
13b
I
69
I
149
I
71
I
15c
I
79
I
16f
I
81
I
182
I
89
I
195
I
92
I
1a8
I
9b
I
1bb
I
a4
I
1ce
I
aa
I
1e6
I
af
I
1f4
I
b4
I
207
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
x
13
attach_method
p
5
I
0
I
b6
I
0
I
b5
I
1d
x
32
/more/vic/hk/fancy/lib/object.fy
p
0
