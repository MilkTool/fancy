!RBIX
0
x
M
1
n
n
x
10
__script__
i
56
99
7
0
1
65
49
1
3
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
99
7
5
1
65
49
1
3
13
99
12
7
2
12
7
6
12
65
12
49
4
4
15
49
2
0
15
2
11
I
6
I
0
I
0
I
0
n
p
7
x
6
Number
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
Number
i
139
5
66
7
0
64
15
5
49
1
0
15
99
7
2
7
3
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
6
7
7
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
8
7
9
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
10
7
11
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
12
7
13
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
14
7
15
65
67
49
4
0
49
5
4
15
5
49
1
0
15
99
7
16
7
17
65
67
49
4
0
49
5
4
11
I
5
I
0
I
0
I
0
n
p
18
s
85
""
  Number is a mixin-class for all number values (integer & floats for
  now).
  ""
x
6
public
x
8
:squared
M
1
n
n
x
8
:squared
i
11
7
0
64
15
5
5
47
49
1
1
11
I
2
I
0
I
0
I
0
n
p
2
s
31
Returns the square of a Number.
x
2
:*
p
9
I
0
I
b
I
0
I
9
I
0
I
8
I
4
I
a
I
b
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
17
method_visibility
x
15
add_defn_method
x
8
:doubled
M
1
n
n
x
8
:doubled
i
11
7
0
64
15
5
5
47
49
1
1
11
I
2
I
0
I
0
I
0
n
p
2
s
37
Returns the double value of a Number.
x
2
:+
p
9
I
0
I
11
I
0
I
f
I
0
I
e
I
4
I
10
I
b
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
4
:abs
M
1
n
n
x
4
:abs
i
19
7
0
64
15
5
78
47
49
1
1
56
2
56
3
47
49
4
2
11
I
3
I
0
I
0
I
0
n
p
5
s
50
Returns the absolute (positive) value of a Number.
x
2
:<
M
1
p
2
x
9
for_block
t
n
x
4
:abs
i
7
5
77
47
49
0
1
11
I
3
I
0
I
0
I
0
n
p
1
x
2
:*
p
5
I
0
I
18
I
0
I
17
I
7
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
M
1
p
2
x
9
for_block
t
n
x
4
:abs
i
2
5
11
I
2
I
0
I
0
I
0
n
p
0
p
5
I
0
I
1a
I
0
I
19
I
2
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
13
if_true:else:
p
15
I
0
I
1b
I
0
I
15
I
0
I
14
I
4
I
16
I
a
I
18
I
c
I
1a
I
e
I
1b
I
13
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
7
:negate
M
1
n
n
x
7
:negate
i
11
7
0
64
15
5
77
47
49
1
1
11
I
2
I
0
I
0
I
0
n
p
2
s
47
Negates a Number (-1 becomes 1 and vice versa).
x
2
:*
p
9
I
0
I
21
I
0
I
1f
I
0
I
1e
I
4
I
20
I
b
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
6
:even?
M
1
n
n
x
6
:even?
i
16
7
0
64
15
5
80
47
49
1
1
78
47
49
2
1
11
I
2
I
0
I
0
I
0
n
p
3
s
31
Indicates, if a Number is even.
x
7
modulo:
x
3
:==
p
9
I
0
I
27
I
0
I
25
I
0
I
24
I
4
I
26
I
10
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
5
:odd?
M
1
n
n
x
5
:odd?
i
14
7
0
64
15
5
47
49
1
0
47
49
2
0
11
I
1
I
0
I
0
I
0
n
p
3
s
30
Indicates, if a Number is odd.
x
6
:even?
x
4
:not
p
9
I
0
I
2d
I
0
I
2b
I
0
I
2a
I
4
I
2c
I
e
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
7
:to_num
M
1
n
n
x
7
:to_num
i
2
5
11
I
1
I
0
I
0
I
0
n
p
0
p
5
I
0
I
31
I
0
I
30
I
2
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
p
17
I
2
I
5
I
b
I
b
I
1e
I
11
I
31
I
1b
I
44
I
21
I
57
I
27
I
6a
I
2d
I
7d
I
31
I
8b
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
13
attach_method
x
15
FancyEnumerable
M
1
n
n
x
15
FancyEnumerable
i
40
5
66
5
49
0
0
15
99
7
1
7
2
65
67
49
3
0
49
4
4
15
5
49
0
0
15
99
7
5
7
6
65
67
49
3
0
49
4
4
11
I
5
I
0
I
0
I
0
n
p
7
x
6
public
x
4
:sum
M
1
n
n
x
4
:sum
i
13
7
0
64
15
5
56
1
78
47
49
2
2
11
I
3
I
0
I
0
I
0
n
p
3
s
125
""Calculates the sum of all the elements in the @Enumerable
      (assuming them to be @Number@s (implementing '+' & '*')).""
M
1
p
2
x
9
for_block
t
n
x
4
:sum
i
19
58
37
19
0
15
37
19
1
15
15
20
0
20
1
47
49
0
1
11
I
5
I
2
I
2
I
2
n
p
1
x
2
:+
p
3
I
0
I
39
I
13
x
32
/more/vic/hk/fancy/lib/number.fy
p
2
x
1
x
x
1
y
x
16
reduce:init_val:
p
13
I
0
I
3a
I
0
I
38
I
0
I
37
I
4
I
3a
I
5
I
39
I
8
I
3a
I
d
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
x
17
method_visibility
x
15
add_defn_method
x
8
:product
M
1
n
n
x
8
:product
i
13
7
0
64
15
5
56
1
79
47
49
2
2
11
I
3
I
0
I
0
I
0
n
p
3
s
127
""Calculates the product of all the elements in the @Enumerable
      (assuming them to be @Number@s (implementing @+ & @*)).""
M
1
p
2
x
9
for_block
t
n
x
8
:product
i
19
58
37
19
0
15
37
19
1
15
15
20
0
20
1
47
49
0
1
11
I
5
I
2
I
2
I
2
n
p
1
x
2
:*
p
3
I
0
I
40
I
13
x
32
/more/vic/hk/fancy/lib/number.fy
p
2
x
1
x
x
1
y
x
16
reduce:init_val:
p
13
I
0
I
41
I
0
I
3f
I
0
I
3e
I
4
I
41
I
5
I
40
I
8
I
41
I
d
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
p
7
I
2
I
3b
I
7
I
3a
I
1a
I
41
I
28
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
p
7
I
0
I
33
I
0
I
32
I
1b
I
42
I
38
x
32
/more/vic/hk/fancy/lib/number.fy
p
0
